@model _CinemaBooking.ViewModels.SelectSeatsViewModel

@{
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["Error"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">
        @successMessage
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

@using(Html.BeginForm("BookSeats", "Home", FormMethod.Post, new { id = "bookingForm" }))
{
    <input type="hidden" name="sessionId" value="@Model.SessionId" />
    <div class="container mt-4 text-center">
        <h1>Вибір місця для фільму "@Model.FilmTitle"</h1>
        <p>Зал: @Model.HallName</p>
        <p>Дата: @Model.DateSession</p>
        <p>Час початку: @Model.StartTime</p>

        <div class="seats">
            @foreach (var rowGroup in Model.AvailableSeats.GroupBy(seat => seat.RowNumber))
            {
                <div class="seat-row">
                    <div class="row-label">Ряд @rowGroup.Key</div>
                    @foreach (var seat in rowGroup)
                    {
                        <div class="seat @(seat.IsAvailable ? "available" : "unavailable")"
                             data-seat-id="@seat.SeatId"
                             data-is-available="@seat.IsAvailable.ToString().ToLower()">
                            Місце @seat.SeatNumber
                        </div>
                    }
                </div>
            }
            <form id="bookingForm" method="post" action="@Url.Action("BookSeats", "Home")">
                <input type="hidden" name="sessionId" value="@Model.SessionId" />
                <button type="submit" class="btn mt-3">Забронювати вибрані місця</button>
            </form>
        </div>
    </div>
}



<script>
    document.addEventListener('DOMContentLoaded', function () {
    const seatElements = document.querySelectorAll('.seat.available'); 
    const selectedSeats = new Set();

    seatElements.forEach(seat => {
        seat.addEventListener('click', function () {
            const seatId = seat.getAttribute('data-seat-id');
            const isSelected = selectedSeats.has(seatId);

            console.log(`Місце ${seatId} обрано: ${!isSelected}`); 

            if (isSelected) {
                selectedSeats.delete(seatId);
                seat.classList.remove('selected');
            } else {
                selectedSeats.add(seatId);
                seat.classList.add('selected');
            }
        });
    });

    const bookingForm = document.getElementById('bookingForm');
    bookingForm.addEventListener('submit', function (e) {
        e.preventDefault();
        console.log("Форма відправлена");
        const existingInputs = bookingForm.querySelectorAll('input[type="hidden"]');
        existingInputs.forEach(input => input.remove());
        selectedSeats.forEach(seatId => {
            const hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'SelectedSeats';
            hiddenInput.value = seatId;
            bookingForm.appendChild(hiddenInput);
        });

        console.log("Вибрані місця додано до форми");

        const sessionIdInput = document.createElement('input');
        sessionIdInput.type = 'hidden';
        sessionIdInput.name = 'sessionId';
        sessionIdInput.value = '@Model.SessionId';
        bookingForm.appendChild(sessionIdInput);

        console.log("sessionId додано до форми");

        bookingForm.submit();
    });
});
</script>


<style>
    body {
        background-color: #111;
        color: #fff;
        font-family: Arial, sans-serif;
    }

    .seats {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        margin-top: 20px;
    }

    .seat-row {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
    }

    .row-label {
        font-weight: bold;
        margin-right: 10px;
        color: #ddd;
    }

    .seat {
        width: 80px;
        height: 80px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
        background-color: #FF6347;
        color: #fff;
        cursor: pointer;
        font-size: 1.2em;
        transition: background-color 0.3s ease;
    }

        .seat:hover {
            background-color: #FF4500;
        }

        .seat.unavailable {
            background-color: #555;
            cursor: not-allowed;
        }

        .seat.selected {
            background-color: #28a745;
        }

    #bookingForm {
        display: flex;
        justify-content: center;
        margin-top: 30px;
    }

    .btn {
        display: inline-block;
        padding: 12px 24px;
        font-size: 1.2em;
        color: #fff;
        background-color: #FF6347;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-transform: uppercase;
        transition: background-color 0.3s ease, transform 0.2s ease;
        margin-top: 20px;
    }

        .btn:hover {
            background-color: #FF4500;
            transform: scale(1.05);
        }

        .btn:active {
            transform: scale(1);
        }
</style>
